{
    "patches": [
        {
            "label": "2025-09-22_17-15-39",
            "content": "@@ -1,570 +0,0 @@\n-class towel: %0A    def __ini__(self, color :str, size :str) :%0A        self.color = color%0A        self.size = size%0A        self.Wetness :int = 0 %0A    %0A    def getMaxWetness(self) -%3Eint :%0A        if self.size == %22P%22 :%0A            return 10%0A        if self.size == %22M%22 :%0A            return 20%0A        if self.size == %22G%22 :%0A            return 30 %0A        return 0%0A    %0A    def dry(self, amount :int) -%3E None:%0A        self.Wetness += amount%0A        if self.Wetness %3E self.getMaxWetness() :%0A            print(%22toalha enxarcada%22)%0A            self.wetness = self.getMaxWetness%0A%0A%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-09-30_02-59-45",
            "content": "@@ -5,16 +5,17 @@\n s towel:\n+ \n %0A    def\n@@ -20,17 +20,16 @@\n ef __ini\n-t\n __(self,\n@@ -51,16 +51,17 @@\n ze :str)\n+ \n :%0A      \n@@ -135,16 +135,17 @@\n :int = 0\n+ \n %0A    %0A  \n@@ -176,12 +176,12 @@\n ) -%3E\n- \n int\n+ \n :%0A  \n@@ -205,16 +205,17 @@\n e == %22P%22\n+ \n :%0A      \n@@ -257,16 +257,17 @@\n e == %22M%22\n+ \n :%0A      \n@@ -309,16 +309,17 @@\n e == %22G%22\n+ \n :%0A      \n@@ -333,16 +333,17 @@\n eturn 30\n+ \n %0A       \n@@ -393,24 +393,27 @@\n t) -%3E None:%0A\n+   \n      self.We\n@@ -429,24 +429,27 @@\n amount%0A     \n+   \n if self.Wetn\n@@ -474,16 +474,17 @@\n etness()\n+ \n :%0A      \n@@ -481,24 +481,28 @@\n ) :%0A        \n+    \n print(%22toalh\n@@ -527,331 +527,44 @@\n     \n-self.Wetness = self.getMaxWetness()%0A    %0A    def wringOut(self) -%3E None :%0A        self.wetness = 0%0A%0A    def isDry(self) -%3E bool :%0A        return\n+    self.wetness =\n  self.\n-wetness == 0%0A    %0A    def show(self) -%3E None:%0A        print (self)%0A%0A    def __str__(self) -%3E str :%0A        return f%22%7Bself.color%7D %7Bself.size%7D %7Bself.Wetness%7D%22%0A    %0A%0A%0A%0A%0A%0A        %5D\n+getMaxWetness%0A%0A\n %0A\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_13-49-52",
            "content": "@@ -1,15 +1,15 @@\n class \n-T\n+t\n owel:%0A  \n@@ -823,109 +823,8 @@\n   %0A%0A\n-# teste%0Atowel = Towel (%22blue%22, %22P%22)%0AtowelWoman = Towel (%22pink%22,%22M%22)%0ATowelMan = Towel (%22blue!%22,%22G%22)%0A%0A%0A\n %0A%0A%0A%0A\n",
            "lines": "39"
        },
        {
            "label": "2025-09-30_13-54-24",
            "content": "@@ -921,8 +921,21 @@\n %22G%22)%0A%0A%0A%0A\n+%0A%0A%0A        %5D%0A\n",
            "lines": "45"
        },
        {
            "label": "2025-09-30_14-31-21",
            "content": "@@ -301,16 +301,17 @@\n .size ==\n+ \n %22G%22:%0A   \n@@ -388,35 +388,32 @@\n ) -%3E None:%0A     \n-   \n self.Wetness += \n@@ -419,19 +419,16 @@\n  amount%0A\n-   \n      if \n@@ -468,28 +468,24 @@\n ():%0A        \n-  \n-  \n print(%22toalh\n@@ -542,16 +542,20 @@\n tness()%0A\n+    \n %0A    def\n@@ -573,24 +573,25 @@\n elf) -%3E None\n+ \n :%0A        se\n@@ -585,33 +585,33 @@\n  :%0A        self.\n-W\n+w\n etness = 0%0A%0A    \n@@ -633,18 +633,20 @@\n  -%3E bool\n+ \n :%0A\n+ \n        r\n@@ -652,25 +652,25 @@\n return self.\n-W\n+w\n etness == 0%0A\n@@ -692,33 +692,32 @@\n ow(self) -%3E None\n- \n :%0A        print(\n@@ -715,16 +715,17 @@\n    print\n+ \n (self)%0A%0A\n@@ -752,16 +752,17 @@\n ) -%3E str\n+ \n :%0A      \n@@ -784,16 +784,17 @@\n f.color%7D\n+ \n %7Bself.si\n@@ -796,16 +796,17 @@\n lf.size%7D\n+ \n %7Bself.We\n@@ -813,16 +813,116 @@\n tness%7D%22%0A\n-%0A\n     \n+%0A%0A# teste%0Atowel = Towel (%22blue%22, %22P%22)%0AtowelWoman = Towel (%22pink%22,%22M%22)%0ATowelMan = Towel (%22blue!%22,%22G%22)%0A\n %0A%0A%0A\n",
            "lines": "41"
        },
        {
            "label": "2025-09-30_16-27-34",
            "content": "@@ -821,37 +821,7 @@\n     \n-#testes%0A    towelMinha = Towel\n %0A%0A%0A\n",
            "lines": "36"
        },
        {
            "label": "2025-09-30_16-38-15",
            "content": "@@ -819,445 +819,39 @@\n %0A%0A  \n-# Testes%0Atowel = Towel(%22Azul%22, %22P%22)%0Atowel.show()  # Azul P 0%0Atowel.dry(5)%0Atowel.show()  # Azul P 5%0Aprint(towel.isDry()) # False%0Atowel.dry(5)%0Atowel.show()  # Azul P 10%0Atowel.dry(5) # msg: toalha encharcada%0Atowel.show()  # Azul P 10%0A%0Atowel.wringOut()%0Atowel.show()  # Azul P 0%0Atowel = Towel(%22Verde%22, %22G%22)%0Aprint(towel.isDry()) # True%0Atowel.dry(30)%0Atowel.show()  # Verde G 30%0Aprint(towel.isDry()) # False%0Atowel.dry(1)  # msg: toalha encharcada\n+  #testes%0A    towelMinha = Towel\n %0A%0A%0A\n",
            "lines": "37"
        },
        {
            "label": "2025-09-30_16-42-31",
            "content": "@@ -817,10 +817,13 @@\n %7D%22%0A%0A\n-#t\n+  # T\n este\n@@ -832,23 +832,23 @@\n towe\n-r\n+l\n  = Towe\n-r (%22red\n+l(%22Azul\n %22, %22\n@@ -859,49 +859,405 @@\n towe\n-r.show()%0Atower.dry(5)%0Atower.show()%0Aprint(towe\n+l.show()  # Azul P 0%0Atowel.dry(5)%0Atowel.show()  # Azul P 5%0Aprint(towel.isDry()) # False%0Atowel.dry(5)%0Atowel.show()  # Azul P 10%0Atowel.dry(5) # msg: toalha encharcada%0Atowel.show()  # Azul P 10%0A%0Atowel.wringOut()%0Atowel.show()  # Azul P 0%0Atowel = Towel(%22Verde%22, %22G%22)%0Aprint(towel.isDry()) # True%0Atowel.dry(30)%0Atowel.show()  # Verde G 30%0Aprint(towel.isDry()) # False%0Atowel.dry(1)  # msg: toalha encharcada%0A%0A%0A\n",
            "lines": "54"
        },
        {
            "label": "2025-09-30_22-42-02",
            "content": "@@ -901,14 +901,4 @@\n towe\n-l.isDry())\n",
            "lines": "39"
        },
        {
            "label": "2025-09-30_22-43-43",
            "content": "@@ -841,12 +841,11 @@\n r (%22\n-blue\n+red\n %22, %22\n",
            "lines": "39"
        },
        {
            "label": "2025-09-30_22-44-12",
            "content": "@@ -817,531 +817,99 @@\n %7D%22%0A%0A\n-def main() :%0A    toalha = Towel(%22azul\n+#testes%0Atower = Tower (%22blue\n %22, %22\n-G%22)%0A    while True :%0A        line :str = input()%0A        args :list %5Bstr%5D = line.split(%22%22)%0A        if args %5B0%5D == %22end%22:%0A          break%0A        elif args%5B0%5D == %22new%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel (color, size)%0A        elif args %5B0%5D == %22show%22:%0A            print(toalha)%0A        elif args %5B0%5D == %22dry%22 :%0A            amount = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        else:%0A            print (%22fail: comando invalido%22)%0Amain(\n+P%22)%0Atower.show()%0Atower.dry(5)%0Atower.show()%0Aprint(towel.isDry()\n )\n",
            "lines": "39"
        },
        {
            "label": "2025-10-04_11-06-57",
            "content": "@@ -684,23 +684,20 @@\n     def \n-mostrar\n+show\n (self) -\n@@ -1020,13 +1020,11 @@\n == %22\n-criar\n+new\n %22:%0A \n@@ -1148,15 +1148,12 @@\n == %22\n-mostrar\n+show\n %22:%0A \n",
            "lines": "52"
        },
        {
            "label": "2025-10-04_11-16-28",
            "content": "@@ -945,17 +945,16 @@\n .split(%22\n- \n %22)%0A     \n",
            "lines": "52"
        },
        {
            "label": "2025-10-04_11-19-11",
            "content": "@@ -1188,21 +1188,8 @@\n alha\n-, color, size\n )%0A  \n",
            "lines": "52"
        },
        {
            "label": "2025-10-04_11-21-50",
            "content": "class Towel:\n    def __init__(self, color :str, size :str):\n        self.color = color\n        self.size = size\n        self.Wetness :int = 0\n    \n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size ==\"G\":\n            return 30\n        return 0\n    \n    def dry(self, amount :int) -> None:\n        self.Wetness += amount\n        if self.Wetness > self.getMaxWetness():\n            print(\"toalha enxarcada\")\n        self.Wetness = self.getMaxWetness()\n\n    def wringOut(self) -> None:\n        self.Wetness = 0\n\n    def isDry(self) -> bool:\n       return self.Wetness == 0\n    \n    def mostrar(self) -> None :\n        print(self)\n\n    def __str__(self) -> str:\n        return f\"{self.color}{self.size}{self.Wetness}\"\n\ndef main() :\n    toalha = Towel(\"azul\", \"G\")\n    while True :\n        line :str = input()\n        args :list [str] = line.split(\" \")\n        if args [0] == \"end\":\n          break\n        elif args[0] == \"criar\":\n            color = args[1]\n            size = args[2]\n            toalha = Towel (color, size)\n        elif args [0] == \"mostrar\":\n            print(toalha, color, size)\n        elif args [0] == \"dry\" :\n            amount = int(args[1])\n            toalha.dry(amount)\n        else:\n            print (\"fail: comando invalido\")\nmain()",
            "lines": "52"
        }
    ]
}